<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?
class frmUsuario extends Form
{
   var $objusuario;
   protected $session; 

   function frmUsuario()  // construtor da Classe
   {
      global $MIOLO,$module;

      // Título do Formulário
      $this->Form('Criar Usuários');
      //Chama o CreateFileds, etc.
      $this->EventHandler();

      // Botão "enviar" não aparece
      $this->defaultButton = false;
      // Botão 'fechar', direcionando para o handler biblioteca/main/circulacao/usuario
      $this->SetClose($this->manager->GetActionURL($module, 'main:secretaria:usuários'));
      $this->page->AddJsCode(file_get_contents(dirname(__FILE__) . '/../ui/js/mask.js'));
 	$this->session = $MIOLO->session;
   }

   function CreateFields()
   {
      global $MIOLO,$module;
      $objUsuarioValidacao = $MIOLO->GetBusiness($module,'usuariovalidacao');
      $query = $objUsuarioValidacao->ListGrupos();
    // Campos que aparecem no formulário
	$estados = Array("AC"=>"Acre","AL"=>"Alagoas","AM"=>"Amazonas","AP"=>"Amapá","BA"=>"Bahia","CE"=>"Ceará","DF"=>"Distrito Federal",
   	"ES"=>"Espírito Santo","GO"=>"Goiás","MA"=>"Maranhão","MG"=>"Minas Gerais","MS"=>"Mato Grosso do Sul","MT"=>"Mato Grosso",
   	"PA"=>"Pará","PB"=>"Paraíba","PE"=>"Pernambuco","PI"=>"Piauí","PR"=>"Paraná","RJ"=>"Rio de Janeiro","RN"=>"Rio Grande do Norte",
   	"RO"=>"Rondônia","RS"=>"Rio Grande do Sul","SC"=>"Santa Catarina","SE"=>"Sergipe","SP"=>"São Paulo","TO"=>"Tocantins");
        $nome = new MTextField('nome','','Nome',70,"Obrigatorio");
        $bairro = new MTextField('bairro','','Bairro',57);
        $cep = new MTextField('cep','','CEP',10,'Ex.: 36200-000');
        $dataNascimento = new TextField('dataNascimento','','Data Nascimento',20,"Ex: 20/05/2008");
        $nomePai = new MTextField('nomePai','','Nome do Pai',70);
        $nomeMae = new MTextField('nomeMae','','Nome da Mae',70);
        $sexo = new MSelection('sexo','','Sexo',Array('M' => "Masculino",'F' => "Feminino"));
        $anoChegada = new MTextField('anoChegada','','Ano de Chegada',4);
        $telefone = new MTextField('telefone','','Telefone',33);
        $celular = new MTextField('celular','','Celular',34);
        $email = new MTextField('email','','E-mail',70);
        $grupoSanguineo = new MSelection('grupoSanguineo','','Grupo Sanguíneo',Array("A+"=>"A+","A-"=>"A-","B+"=>"B+","B-"=>"B-","AB+"=>"AB+","AB-"=>"AB-","O+"=>"O+","O-"=>"O-"));
     	$cpf = new MTextField('cpf','','CPF',20);
        $numRg = new MTextField('numRg','','Número do RG',25);
	$tipoRg = new MTextField('tipoRg','','Tipo do RG', 25);
       	$orgaoRg = new MTextField('orgaoRg','','Orgão Expedidor do RG',22);
        $ufRg = new MSelection('ufRg','','UF do RG',$estados);
        $numCartPro = new MTextField('numCartPro','','Número da carteira profissional',25);
        $serieCartPro = new MTextField('serieCartPro','','Série da carteira profissional',22);
        $ufCartPro = new MSelection('ufCartPro','','UF Carteira Profissional',$estados);
        $semestreIngresso = new MSelection('semestreIngresso','','Semestre Ingresso',array(1=>"1º Semestre",2=>"2º Semestre"),false,'Obrigatório');
        $lkpMunicipio = new MLookupTextField('lkpMunicipio','','Município',70,'Use a lupa - Obrigatório');
        $lkpInstituicao = new MLookupTextField('lkpInstituicao','','Instituição',70,'Use a lupa - Obrigatório');
        $lkpPaisNascimento = new MLookupTextField('lkpPaisNascimento','','País de nascimento',70,'Use a lupa - Obrigatório');
        $selGrupo = new MSelection('selGrupo','','Grupo',$query);
       // $lblDica = new MTextLabel('lblDica','&nbsp; --Dados de acesso do Usuário-- &nbsp;','&nbsp;'),
       $groupDadosUser = new MBaseGroup('groupDadosUser', 'Dados do Usuário',array($nome,$bairro,$cep,$sexo,$dataNascimento,$nomePai,$nomeMae,$telefone,$celular,$email,$cpf,$numRg,$tipoRg,$orgaoRg,$ufRg,$numCartPro,$serieCartPro,$ufCartPro,$anoChegada,$semestreIngresso,$grupoSanguineo,$lkpMunicipio,$lkpInstituicao,$lkpPaisNascimento,$selGrupo),'horizontal','css');
       $groupDadosUser->addAttribute('style','padding:10px');


	$user = new MTextField('user','','Login - Matrícula',30,"Obrigatório");
        $nick = new MTextField('nick','','Apelido',30);
        $senha = new MPasswordField('senha','','Senha',30,"Obrigatório");
        $lkpSetor = new MLookupTextField('lkpSetor','','Setor',30,'Use a lupa - Obrigatório');
	$groupDadosAcesso = new MBaseGroup('groupDadosAcesso', 'Dados de Acesso', array($user,$nick,$senha,$lkpSetor),'horizontal,','css');
	$groupDadosAcesso->addAttribute('style','padding:10px');

    //fields
	$fields = array(
		array($groupDadosUser),
		new MHiddenField('idInstituicao'),
		new MHiddenField('idMunicipio'),
		new MHiddenField('idPais'),
		new MHiddenField('idNascimento'),
		new MHiddenField('idGrupoAnterior'),
		array($groupDadosAcesso),
		new MHiddenField('idSetor'),
		new MHiddenField('idUsuario'),
		new MHiddenField('idPessoa'),
	);
	


    $this->SetFields($fields);
    
    $this->SetClose(NULL);
    

    //Validação do campo cep
    $this->cep->addAttribute('onKeyUp','makeMask(this, \'#####-###\');');
    $this->cep->addAttribute('onBlur','makeMask(this, \'#####-###\');');
    $this->cep->AddAttribute('maxlength','9');

    //Validaçao do campo Ano de Chegada
    $this->anoChegada->AddAttribute('maxlength','4');

    //Validaçao do campo CPF
    $this->cpf->AddAttribute('maxlength','14');
    $this->cpf->addAttribute('onKeyUp','makeMask(this, \'###.###.###-##\');');
    
    //Validação do campo de Data
    $this->dataNascimento->addAttribute('onKeyUp','makeMask(this, \'##/##/####\');');
    $this->dataNascimento->addAttribute('onBlur','makeMask(this, \'##/##/####\');');

    $validators = array(
       new RequiredValidator('nome'),
       new MMaskValidator('cep','','99999-999','required'),
       new RequiredValidator('dataNascimento'),
       new MDATEDMYValidator('dataNascimento'),
       new EMAILValidator('email','','','e-mail invalido'),
       new MIntegerValidator('anoChegada'),
       new MCPFValidator('cpf'),
       new RequiredValidator('lkpInstituicao'),
       new RequiredValidator('lkpPaisNascimento'),
       new RequiredValidator('lkpSetor'),
       new RequiredValidator('lkpMunicipio'),   
        );  
      
       $this->SetValidators($validators);
      
        // Botões que aparecem no formulário
        $buttons = Array(
        new FormButton('btnSalvar', 'Salvar'),
        new MLink('btnLinkRelacao','Relação de Usuários',$this->manager->getActionURL($module,$self,'',
   array('event'=>'btnList:click'))),
        );

      //Insere os Botões
      $this->SetButtons($buttons);
      $this->SetbuttonAttr('btnVoltar','visible',false);

       /* 
       As 4 propriedades de um lookup:
       module = módulo usado
       item = A funcao que chama no arquivo classes/lookup.class
       event = O evento relacionado quando o usuário clica em 'acao'
       related = Os campos retornados após a ação 
       */
      //Utilizamos o lookup do modulo common para o campo municipio
               $this->SetFieldAttr('lkpMunicipio','module','common');
      $this->SetFieldAttr('lkpMunicipio','item','municipio');
      $this->SetFieldAttr('lkpMunicipio','event','filler');
      //m.idmunicipio,m.municipio,m.iduf,p.pais,p.idpais
      $this->SetFieldAttr('lkpMunicipio','related', 'idMunicipio,lkpMunicipio,none,none,idPais');

      //Utilizamos o lookup do módulo Biblioteca para o campo Pais de nascimento
      $this->SetFieldAttr('lkpPaisNascimento','module','biblioteca');
      $this->SetFieldAttr('lkpPaisNascimento','item','pais');
      $this->SetFieldAttr('lkpPaisNascimento','event','filler');
      $this->SetFieldAttr('lkpPaisNascimento','related', 'idNascimento,lkpPaisNascimento');
      
      //Utilizamos o lookup do módulo Common para o campo Setor
      $this->SetFieldAttr('lkpSetor','module','common');
      $this->SetFieldAttr('lkpSetor','item','setor');
      $this->SetFieldAttr('lkpSetor','event','filler');
      $this->SetFieldAttr('lkpSetor','related', 'idSetor,lkpSetor,none,none');

      //Utilizamos o lookup do módulo Common para o campo Setor
      $this->SetFieldAttr('lkpInstituicao','module','common');
      $this->SetFieldAttr('lkpInstituicao','item','instituicao');
      $this->SetFieldAttr('lkpInstituicao','event','filler');
      $this->SetFieldAttr('lkpInstituicao','related', 'idInstituicao,lkpInstituicao,none');
   }

   function btnSalvar_click()
   {
      global $MIOLO,$module,$self;
      $data = $this->getData();
      $objUsuario = $MIOLO->GetBusiness($module,'usuario');
     $data->nome = "Saulo";
	$this->SetData($data);
	$this->session->SetValue('sNome',$data->nome);
	$this->session->SetValue('sBairro',$data->bairro);
	$this->session->SetValue('sCep',$data->cep);
	$this->session->SetValue('sdataNascimento',$data->dataNascimento);
	$this->session->SetValue('sNomePai',$data->nomePai);
	$this->session->SetValue('sNomeMae',$data->nomeMae);
	$this->session->SetValue('sSexo',$data->sexo);
	$this->session->SetValue('sAnoChegada',$data->anoChegada);
	$this->session->SetValue('sTelefone',$data->telefone);
	$this->session->SetValue('sCelular',$data->celular);
	$this->session->SetValue('sEmail',$data->email);
	$this->session->SetValue('sGrupoSanguineo',$data->grupoSanguineo);
	$this->session->SetValue('sCpf',$data->cpf);
	$this->session->SetValue('sNumRg',$data->numRg);
	$this->session->SetValue('sTipoRg',$data->tipoRg);
	$this->session->SetValue('sOrgaoRg',$data->orgaoRg);
	$this->session->SetValue('sUfRg',$data->ufRg);
	$this->session->SetValue('sNumCartPro',$data->numCartPro);
	$this->session->SetValue('sSerieCartPro',$data->serieCartPro);
	$this->session->SetValue('sUfCartPro',$data->ufCartPro);
	$this->session->SetValue('sSemestreIngresso',$data->semestreIngresso);
	$this->session->SetValue('sLkpMunicipio',$data->lkpMunicipio);
	$this->session->SetValue('sLkpinstituicao',$data->lkpInstituicao);
	$this->session->SetValue('sLkpPaisNascimento',$data->lkpPaisNascimento);

	$this->session->SetValue('sLogin',$data->login);
	$this->session->SetValue('sNick',$data->nick);
	$this->session->SetValue('sSenha',$data->senha);
	$this->session->SetValue('sLkpSetor',$data->lkpSetor);

	$this->SetData($data);


         $ok = $objUsuario->SaveUsuario($data);
         if(!$ok){
	    $MIOLO->Prompt(Prompt::Information("Usuário salvo com sucesso.",$MIOLO->GetActionURL($module,'main:controleacesso',$data->idUsuario,array('event'=>'btnEdit:click') )));
	 }else{
	    $MIOLO->Error("Usuário não foi salvo com sucesso.", $MIOLO->GetActionURL($module,$action) );
      }
   }
   

   function SubstituirPorVazio($string)
   {
      $string = ereg_replace('[/()":.?,&;\-]',"",$string);
      return $string;
   }

   function btnList_click()
   {
      global $MIOLO, $module, $self, $theme, $action, $page;
      //Instancia o objeto autor
      $objUsuario = $MIOLO->GetBusiness($module,'usuario');

      $columns = array(
         new DataGridColumn('nome','Nome','left',true, '25%',true, null, true,true),
         new DataGridColumn('login','Login','left',true, '25%',true, null, true,true),
         new DataGridColumn('nick','Apelido','center',true, '25%',true, null, true,true),
         new DataGridColumn('cpf','CPF','center',true, '25%',true, null, true,true),
         );

      $href_datagrid = $MIOLO->GetActionURL($module,$self,'', Array('event'=>'btnList_click'));
      $page->SetAction($href_datagrid);

      $query = $objUsuario->ListUsuario();
      
      $datagrid = new DataGrid2($query, $columns, $href_datagrid,20);
      $datagrid->SetTitle('Relação de Usuários');
      $datagrid->SetLinkType('linkbutton');
      $datagrid->SetWidth('100%');
      $href_edit = $MIOLO->GetActionURL($module,$self,'%0%',Array('event'=>'btnConsulta:click'));
      $href_dele = $MIOLO->GetActionURL($module,$self,'%0%',Array('event'=>'btnExcluir:click'));
      $datagrid->HeaderLink('new', 'Novo Usuário',$MIOLO->GetActionURL($module,$self,'',Array('event'=>'')));
      $datagrid->AddActionIcon('Salvar', 'edit', $href_edit);
      $datagrid->AddActionIcon('Excluir', 'delete.gif', $href_dele);
      $theme->InsertContent($datagrid);
   }
   
   function btnConsulta_click()
   {
      global $MIOLO,$item,$theme,$module;
      $idUsuario = $item;
      $objUsuario = $MIOLO->GetBusiness($module,'usuario');
      $usuario = $objUsuario->GetUserById($idUsuario);
      $this->SetData($usuario);
   }

   function btnExcluir_click()
   {
      global $MIOLO,$item,$theme,$action,$module;
      $idUsuario = $item;
      $objUsuario = $MIOLO->GetBusiness($module,'usuario');
      
      if($idUsuario != 0){
         try
         {
            $ok = $objUsuario->DeleteUsuario($item);
            $MIOLO->Information("Usuário ".$data->nome . " excluído com sucesso.", $MIOLO->GetActionURL($module,$action,'',array('event'=>'btnList_click()')));
         }
         catch (Exception $e)
         {
            $MIOLO->Error("Usuário não foi deletado com sucesso.", $MIOLO->GetActionURL($module,$action,'',array('event'=>'btnList_click()')) );
         }
      }else{
         $MIOLO->Error("Usuário administrador não pode ser deletado.", $MIOLO->GetActionURL($module,$action,'',array('event'=>'btnList_click()')));
      }
   }

   function formatarData($string)
   {
      $resultado = '';
      if($string)
      {
         $data =  explode('-',$string);
         $resultado = $data[2].'/'.$data[1].'/'.$data[0];
      }
      return $resultado;
   }

   function formatarCPF($string)
   {
      $resultado = '';
      if($string)
      {
         $resultado = substr($string,0,3).'.'.substr($string,3,3).'.'.substr($string,6,3).'-'.substr($string,9);
      }
      return $resultado;
   }

   function formatarCEP($string)
   {
      $resultado = '';
      if($string)
      {
         $resultado = substr($string,0,5).'-'.substr($string,5);
      }
      return $resultado; 
   }
}
?>


