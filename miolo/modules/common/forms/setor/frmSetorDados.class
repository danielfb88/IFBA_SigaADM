
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?php
class frmSetorDados extends MForm
{
	private $objSetor, $objinst, $objPessoa, $pessoas;

	function __construct($objSetor)
	{
		$this->objSetor = $objSetor;
		$situacao = $this->objSetor->dataFim == NULL ? 'Aberto' : 'Fechado';
		parent::__construct("Setor: {$this->objSetor->sigla} [{$this->objSetor->idSetor}]");
		$this->EventHandler();

		$this->page->AddJsCode(file_get_contents(dirname(__FILE__) . '/../../ui/js/select.js'));
	}


	function CreateFields()
	{
		global $MIOLO;
		
		$objPessoa = $MIOLO->GetBusiness('common','pessoa');

		$tabGeral = $this->manager->GetBusiness('common','tabelageral');
		$qryTipoSetor = $tabGeral->ListByTabela('CM_TIPOSETOR');

		$tipoOrganograma = $this->manager->GetBusiness('common','tipoorganograma');
		$qryTipoOrganograma = $tipoOrganograma->ListAll();

		$lkpSetorId = new MTextField('lkpSetorId','','Id Setor Pai',5);

		// $lkpSetorId->readonly = true;
		$lkpSetor = new MLookupTextField('lkpSetor','','Setor Pai',15);
		$lkpSetor->module = 'common';
		$lkpSetor->item = 'setor';
		$lkpSetor->event = 'filler';
		$lkpSetor->related = 'lkpSetorId, lkpSetor, none, none';
		$siglainst = $this->manager->GetBusiness('common','instituicao');
		$qryinst = $siglainst->ListAllSetor();
		
		$hierarquia = array(
		new MSelection('selHierarquia','','Tipo',$qryTipoOrganograma->chunkResult()),
		$lkpSetor, $lkpSetorId
		);

		$lkpPessoa = new MLookupTextField('lkpPessoa','','Responsável',30);
        $lkpPessoa->module = 'common';
        $lkpPessoa->item = 'pessoa';
        $lkpPessoa->event = 'filler';
        $lkpPessoa->related = 'idPessoa,lkpPessoa,none,none';

		$fields = array(
			new MHiddenField('key',''),
			//           array(
			//    		   new MTextField('idsetor','','IdSetor',4),
			//               new MText('acao','','blue'),
			//           ),
			array(
				new MSelection('idinstituicao','','Instituição'),
				$sigla  =  new MSelection('sigla','','Sigla da Instituição',$qryinst->chunkResult()),

				new MTextField('siglas','','Sigla Setor',3),
				new MCalendarField('dataini','','Data Inicio',10),
				new MCalendarField('datafim','','Data Fim',10),
				new MTextField('nomesetor','','Nome',50),
			),
			array(
				new MSelection('tiposetor','','Tipo',$qryTipoSetor->ChunkResult()),
				new MTextField('fone','','Telefone',15),
				new MTextField('fax','','Fax',15),
				new MTextField('centrocusto','','Centro de Custo',20),
				new MTextField('localizacao','','Localização',15),
				$lkpPessoa,
              			new MHiddenField('idPessoa',''),
			),
			array(
				new MTextField('idsetorsiape','','Código Siape',15),
			),
			array(
				new MMultiLineField('obs','','Observação',70,7,50),
				new MultiTextField3('mtHierarquia',null,'Organogramas',$hierarquia,150,true,'horizontal'),
			),
		);


		$this->SetFields($fields);

		//faz a seleção automática da sigla ao selecionar a instituição
		$this->idinstituicao->addAttribute('onChange','getItemFromSelect(this, \'sigla\');');
		$this->sigla->addAttribute('onChange','getItemFromSelect(this, \'idinstituicao\');');

		$buttons = array(
		new MButton('btnPost',  'Gravar'),
		new MButton('btnClone', 'Clonar'),
		new MButton('btnClose', 'Fechar Setor'),
		//           new MButton('btnEdit', 'Editar'),
		//		   new MButton('btnNew', 'Novo'),
		new MButton('btnCancel', 'Cancelar'),
		);
		$objinst = $MIOLO->GetBusiness('common','instituicao');
		$query = $objinst->ListRangeInst(NULL, 'instituicao');

		while ( !$query->eof() )
		{
			$opcoes[$query->fields('idinstituicao')] = $query->fields('instituicao');
			$query->moveNext();
		}

		$objinstsetor = $MIOLO->GetBusiness('common','instituicao');
		$query = $objinstsetor->ListRangeSetor(NULL, 'instituicao');

		while ( !$query->eof() )
		{
			$options[$query->fields('sigla')] = $query->fields('sigla');
			$query->moveNext();
		}
		$this->SetFieldAttr('idinstituicao','options', $opcoes);
		$this->SetFieldAttr('sigla','options',$options);
		$this->SetButtons($buttons);

		//Alterado por mim
		$pessoas = $objPessoa->GetById($this->objSetor->idResponsavel);
		
		$this->setData($this->objSetor,$pessoas);
	}

	function SetData($data,$pessoa)
	{
		$this->SetFieldValue('key',          $data->key         );
		$this->SetFieldValue('siglas',       substr(strrchr($data->sigla, '-'), 1 )       );
 		$this->SetFieldValue('idinstituicao',$data->idinstituicao);
 		$this->SetFieldValue('dataini',      $data->dataInicio  );
 		$this->SetFieldValue('datafim',      $data->dataFim     );
		$this->SetFieldValue('nomesetor',    $data->nome        );
		$this->SetFieldValue('tiposetor',    $data->tipo        );
		$this->SetFieldValue('fone',         $data->fone        );
		$this->SetFieldValue('fax',          $data->fax         );
		$this->SetFieldValue('centrocusto',  $data->centroCusto );
		$this->SetFieldValue('obs',          $data->obs         );
		$this->SetFieldValue('localizacao',  $data->localizacao );
		$this->SetFieldValue('lkpPessoa',    $pessoa->nome );
                $this->SetFieldValue('idPessoa',     $pessoa->idpessoa);
		$this->SetFieldValue('idsetorsiape', $data->idSetorSiape );//var_dump($this->rstrstr($data->sigla, '-') );
		$this->SetFieldValue('sigla',        $this->rstrstr($data->sigla, '-'));
		$this->mtHierarquia->setCodeValue($data->getOrganogramas());
	}


	function GetData()
	{
		$data = new FormData();
		$data->sigla       = $this->getFieldValue('sigla').'-'.$this->getFieldValue('siglas');
		$data->idinstituicao = $this->getFieldValue('idinstituicao');
		$data->dataInicio  = $this->getFieldValue('dataini');
		$data->dataFim     = $this->getFieldValue('datafim');
		$data->nome        = $this->getFieldValue('nomesetor');
		$data->tipo        = $this->getFieldValue('tiposetor');
		$data->fone        = $this->getFieldValue('fone');
		$data->fax         = $this->getFieldValue('fax');
		$data->centroCusto = $this->getFieldValue('centrocusto');
		$data->obs         = $this->getFieldValue('obs');
		$data->localizacao = $this->getFieldValue('localizacao');
		$data->idResponsavel   = $this->getFieldValue('idPessoa');
		$data->idSetorSiape= $this->getFieldValue('idsetorsiape');
		//$data->idPaiSetor  = $this->getFieldValue('idPaiSetor');

		$data->organograma = $this->mtHierarquia->getCodeValue();
		return $data;
	}


	function btnPost_click($sender, $item=NULL)
	{		
		$siglas = $this->getFieldValue('siglas');
		$dataInicio = $this->getFieldValue('dataini');
		$nome = $this->getFieldValue('nomesetor');
		$responsavel = $this->getFieldValue('idPessoa');
		
		if(!$siglas)
		{
			$this->AddError('Favor preencher o campo "Sigla Setor"');
		}
		elseif(!$dataInicio)
		{
			$this->AddError('Favor preencher o campo "Data Inicio"');
		}
		elseif(!$nome)
		{
			$this->AddError('Favor preencher o campo "Nome"');
		}
		elseif(!$responsavel)
		{
			$this->AddError('Favor escolher o responsável pelo setor clicando no ícone de busca ao lado do campo "Responsável"');
		}
		else
		{
			$this->objSetor->SetData($this->GetData());
			try
			{
				$this->objSetor->save();
				$action = $this->manager->GetCurrentURL();
				$this->manager->Information('Setor cadastrado/alterado com sucesso.'  , $action );
			}
			catch (EMioloException $e)
			{
				$this->AddError('Erro no cadastramento/alteração das informações do setor');
			}
		}
	}


	function btnClone_click($sender, $item=NULL)
	{
		$setor = $this->objSetor;
		$setor->SetData($this->GetData());
		try
		{
			$setor->SetPersistent(false);
			$setor->save();
			$action = $this->manager->GetActionURL('common','main:organograma',$setor->idSetor, array('form'=>'setor'));
			$this->page->redirect($action);
		}
		catch (EMioloException $e)
		{
			$this->AddError('Erro no cadastramento/alteração das informações do setor');
		}
	}


	function btnClose_click($sender, $item=NULL)
	{
		$setor = $this->objSetor;
		$k = new MKrono();
		$setor->dataFim = $k->KDate('%d/%m/%Y');
		try
		{
			$setor->save();
			$action = $this->manager->GetActionURL('common','main:organograma',$setor->idSetor, array('form'=>'setor'));
			$this->page->redirect($action);
		}
		catch (EMioloException $e)
		{
			$this->AddError('Erro no fechamento do informações do setor');
		}
	}


	function btnCancel_click($sender)
	{
		$action = $this->manager->GetActionURL('common','main:setor:find');
		$this->manager->Information('Operação cancelada com Sucesso.'  , $action );
	}
	
	function rstrstr($haystack, $needle)
{
    return substr(strrev(strstr(strrev($haystack), strrev($needle))), 0, -strlen($needle));
} 
}
?>
